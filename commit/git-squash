#!/bin/bash

# Squash all commits since a given upstream (default origin/HEAD); open $EDITOR with all commit
# messages nicely formatted/bulletted.

set -e
source "$GIT_HELPERS_HOME"/config/.helpers-rc

if [ $# -eq 0 ]; then
  args="origin/HEAD..HEAD"
else
  args="$1"
fi

from="${args%%..*}"
to="${args##*..}"

hashes="$(git rev-list --reverse $args)"

# Attempt to stash any local changes and set up an EXIT-trap to restore them, if any are found.
restore_stash=
if git stash-save; then
  restore_stash=1
fi
finish() {
  echo "Exiting"
  if [ -n "$restore_stash" ]; then
    echo "Restoring changes.."
    git stash pop
    echo "Done"
  fi
}
trap finish EXIT

echo "Operating from $from to $to; $(count $hashes) commits:"
echo ''
git --no-pager log --color=always --pretty --oneline --decorate --no-walk $args | awk '{ print "\t",$0 }'
echo ''
echo "Using commit message:"
echo ''
commit_message_file="$(mkt)"
cat >"$commit_message_file" <<EOF


# Below are the messages for the commits you are squashing.

EOF
git squashed-commit-message $args | tee -a "$commit_message_file"
echo ''
git reset --soft "$from"
git commit -t "$commit_message_file"



