#!/usr/bin/env python
from collections import OrderedDict
import sys
import webbrowser

from util.remotes import get_remotes


def make_github_url(remote):
    '''Converts the bit of a remote after github.com to a github repo URL.'''
    # remote looks like 'foo/bar.git'
    assert '.git' in remote
    return 'https://github.com/%s' % remote.replace('.git', '')


def uniqueify(iterable):
    return list(OrderedDict.fromkeys(iterable))


def github_remotes():
    '''Returns a list of github remotes for the current repo.'''
    return uniqueify([remote for remote in get_remotes().values()
                             if remote.group('host') == 'github.com'])


PAGES = ['', 'issues', 'pulls', 'commits', 'wiki', 'pulse', 'graphs']


def usage():
    sys.stderr.write('''Usage: %s [page]

Where page is one of {%s}. If page is not specified, opens the repo root.
''' % (sys.argv[0], ', '.join(PAGES[1:])))
    sys.exit(1)


if __name__ == '__main__':
    if len(sys.argv) > 2:
        usage()

    page = sys.argv[1] if len(sys.argv) > 1 else ''
    if page not in PAGES:
        usage()

    remotes = github_remotes()
    if len(remotes) == 0:
        sys.stderr.write("There are no github remotes for this repo, "
                         "or perhaps you're not in a git repo.\n")
        sys.exit(1)

    remote = remotes[0].group('path')
    if len(remotes) > 1:
        chosen_remote = remotes[0].groupdict()['path']
        sys.stderr.write('Found multiple remotes. Using %s\n' % chosen_remote)

    webbrowser.open_new_tab(make_github_url(remote) + '/' + page)
    sys.exit(0)
